name: Build and push docker images hosted on everest-ci

on:
  workflow_dispatch:
    inputs:
      force_build:
        description: 'Force build even if no changes are detected'
        required: false
        type: boolean
  push:
    branches:
      - '**'
    tags:
      - 'v*'

env:
  CONTAINER_REGISTRY: ghcr.io
  CUSTOM_BUILD_ACTION_VERSION: ${{ github.sha }}
  CUSTOM_BUILD_ACTION: ${{ github.repository }}/github-actions/build-and-deploy-docker-image

jobs:
  build-and-push-all-images:
    name: Build and push all docker images
    strategy:
      matrix:
        include: 
          - image_name: ${{ github.repository_owner }}/everest-clang-format
            directory: docker/images/everest-clang-format
            platforms: linux/amd64, linux/arm64, linux/arm/v7
          - image_name: ${{ github.repository_owner }}/build-kit-alpine
            directory: docker/images/build-kit
            file: alpine.Dockerfile
            platforms: linux/amd64, linux/arm64, linux/arm/v7
          - image_name: ${{ github.repository_owner }}/build-kit-debian
            directory: docker/images/build-kit
            file: debian.Dockerfile
            platforms: linux/amd64, linux/arm64, linux/arm/v7
    runs-on: ubuntu-22.04
    steps:
      - name: Build and Deploy Docker Image
        uses: ${CUSTOM_BUILD_ACTION}@${CUSTOM_BUILD_ACTION_VERSION}
        with:
          repository: ${{ github.repository }}
          directory: ${{ matrix.directory }}
          image_name: ${{ matrix.image_name }}
          dockerfile: ${{ matrix.file || 'Dockerfile' }}
          docker_registry: ${{ env.CONTAINER_REGISTRY }}
          github_ref_before: ${{ github.event.before }}
          github_ref_after: ${{ github.event.after }}
          github_token: ${{ secrets.GITHUB_TOKEN }}
          github_user: ${{ github.actor }}
          force_build: ${{ inputs.force_build || false }}
          platforms: ${{ matrix.platforms }}
