name: Build and push docker image

inputs:
  repository:
    description: '<org>/<repo> Repository that contains the Dockerfile to build'
    required: true
    type: string
  directory:
    description: 'Directory that contains the Dockerfile to build'
    required: true
    type: string
  image_name:
    description: '<org>/<image-name> Name of the image to deploy'
    required: true
    type: string
  docker_registry:
    description: 'Docker registry to push to'
    required: true
    default: 'ghcr.io'
    type: string
  github_ref_before:
    description: 'Github ref before the change'
    required: true
    type: string
  github_ref_after:
    description: 'Github ref after the change'
    required: true
    type: string
  github_token:
    description: 'Github token'
    required: true
    type: string
  github_user:
    description: 'Github user'
    required: true
    type: string

runs:
  using: "composite"
  steps:
    - name: Checkout Dockerfile
      uses: actions/checkout@v3
      with:
        repository: ${{ inputs.repository }}
        path: dockerfile-repo
        ref: ${{ inputs.github_ref_after }}
        token: ${{ inputs.github_token }}
        fetch-depth: 0
    - name: Check for changes
      id: check-for-changes
      shell: bash
      run: |
        set +e
        changed_files="$(git diff --name-only ${{ inputs.github_ref_before }} ${{ inputs.github_ref_after }} | grep "^${{ inputs.directory }}" | wc  -l)"
        set -e
        is_changed='true'
        if [ $changed_files -eq 0 ]; then
          echo "No changes in ${{ inputs.directory }} directory"
          is_changed=false
        fi
        echo "is_changed=$is_changed" >> $GITHUB_OUTPUT
      working-directory: dockerfile-repo
    - name: Extract metadata
      if: steps.check-for-changes.outputs.is_changed == 'true'
      id: meta
      uses: docker/metadata-action@v3
      with:
        images: ${{ inputs.docker_registry }}/${{ inputs.image_name }}
    - name: Set up QEMU
      if: steps.check-for-changes.outputs.is_changed == 'true'
      uses: docker/setup-qemu-action@v1
      with:
        image: tonistiigi/binfmt:latest
        platforms: all
    - name: Set up Docker Buildx
      if: steps.check-for-changes.outputs.is_changed == 'true'
      uses: docker/setup-buildx-action@v2
    - name: Login to DockerHub
      if: steps.check-for-changes.outputs.is_changed == 'true'
      uses: docker/login-action@v2
      with:
        registry: ${{ inputs.docker_registry }}
        username: ${{ inputs.github_user }}
        password: ${{ inputs.github_token }}
    - name: Build and push
      if: steps.check-for-changes.outputs.is_changed == 'true'
      uses: docker/build-push-action@v3
      with:
        context: dockerfile-repo/${{ inputs.directory }}
        push: true
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}
        platforms: linux/amd64,linux/arm64,linux/arm/v7
        cache-from: type=gha
        cache-to: type=gha,mode=max
    - name: Add summary
      shell: bash
      run: |
        echo "## Build and deploy docker image (${{ inputs.image_name }})" >> $GITHUB_STEP_SUMMARY
        echo "### Inputs" >> $GITHUB_STEP_SUMMARY
        echo "repository: ${{ inputs.repository }}" >> $GITHUB_STEP_SUMMARY
        echo "directory: ${{ inputs.directory }}" >> $GITHUB_STEP_SUMMARY
        echo "image_name: ${{ inputs.image_name }}" >> $GITHUB_STEP_SUMMARY
        echo "docker_registry: ${{ inputs.docker_registry }}" >> $GITHUB_STEP_SUMMARY
        echo "github_ref_before: ${{ inputs.github_ref_before }}" >> $GITHUB_STEP_SUMMARY
        echo "github_ref_after: ${{ inputs.github_ref_after }}" >> $GITHUB_STEP_SUMMARY
        echo "github_token: ${{ inputs.github_token }}" >> $GITHUB_STEP_SUMMARY
        echo "github_user: ${{ inputs.github_user }}" >> $GITHUB_STEP_SUMMARY
        echo "### Changed files" >> $GITHUB_STEP_SUMMARY
        echo "${{ steps.check-for-changes.outputs.is_changed }}" >> $GITHUB_STEP_SUMMARY
        if [ ${{ steps.check-for-changes.outputs.is_changed }} == 'true' ]; then
          echo "### Metadata" >> $GITHUB_STEP_SUMMARY
          echo "tags: ${{ steps.meta.outputs.tags }}" >> $GITHUB_STEP_SUMMARY
          echo "labels: ${{ steps.meta.outputs.labels }}" >> $GITHUB_STEP_SUMMARY
          echo "### Url" >> $GITHUB_STEP_SUMMARY
          echo "https://${{ inputs.docker_registry }}/${{ inputs.image_name }}" >> $GITHUB_STEP_SUMMARY
        else
          echo "-> Build and push skipped" >> $GITHUB_STEP_SUMMARY
        fi
