name: 'Download assets from GitHub release'
description: 'Greet someone'
inputs:
  owner:
    description: 'Owner of the repo'
    required: true
  repo:
    description: 'Repo name'
    required: true
  release-tag:
    description: 'Release tag'
    required: true
  regex:
    description: 'Regex to match assets'
    required: true
outputs:
  random-number:
    description: "Random number"
    value: ${{ steps.random-number-generator.outputs.random-number }}
runs:
  using: "composite"
  steps:
    - name: Download release info
      env:
        RELEASE_JSON_PATH: release.json
      id: download-release-info
      run: |
        curl -L -s \
        -H "Accept: application/vnd.github+json" \
        -H "X-GitHub-Api-Version: 2022-11-28" \
        -o ${RELEASE_JSON_PATH} \
        https://api.github.com/repos/${{ inputs.owner }}/${{ inputs.repo }}/releases/tags/${{ inputs.release-tag }}
        echo "::debug::$(cat ${RELEASE_JSON_PATH})"
        echo "release-id=$(cat ${RELEASE_JSON_PATH} | jq -r '.id')" >> $GITHUB_OUTPUT
        echo "::debug::release-id=$(cat ${RELEASE_JSON_PATH} | jq -r '.id')"
      shell: bash
    - name: Download assets list
      env:
        ASSETS_JSON_PATH: assets.json
      id: download-assets-list
      run: |
        curl -L -s \
        -H "Accept: application/vnd.github+json" \
        -H "X-GitHub-Api-Version: 2022-11-28" \
        -o ${ASSETS_JSON_PATH} \
        https://api.github.com/repos/${{ inputs.owner }}/${{ inputs.repo }}/releases/${{ steps.download-release-info.outputs.release-id }}/assets
        echo "::debug::assets-json-path=${ASSETS_JSON_PATH}"
        echo "assets-json-path=${ASSETS_JSON_PATH}" >> $GITHUB_OUTPUT
        echo "::debug::$(cat ${ASSETS_JSON_PATH})"
      shell: bash
    - name: Create download list
      id: create-download-list
      shell: bash
      run: |
        cat ${{ steps.download-assets-list.outputs.assets-json-path }} | jq -r --arg regex "${{ inputs.regex }}" '.[] | select(.name | test($regex)) | .browser_download_url' > download-list.txt
        cat download-list.txt
        cat ${{ steps.download-assets-list.outputs.assets-json-path }} | jq -r --arg regex "${{ inputs.regex }}" '.[] | select(.name | test($regex)) | .browser_download_url'
        echo "download-list-path=download-list.txt" >> $GITHUB_OUTPUT
        echo "::debug::download-list-path=download-list.txt"
        echo "::debug::$(cat download-list.txt)"
